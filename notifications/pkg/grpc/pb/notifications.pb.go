// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notifications/pkg/grpc/pb/notifications.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendEmailRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailRequest) Reset()         { *m = SendEmailRequest{} }
func (m *SendEmailRequest) String() string { return proto.CompactTextString(m) }
func (*SendEmailRequest) ProtoMessage()    {}
func (*SendEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b94f4797c7a2698, []int{0}
}

func (m *SendEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailRequest.Unmarshal(m, b)
}
func (m *SendEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailRequest.Marshal(b, m, deterministic)
}
func (m *SendEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailRequest.Merge(m, src)
}
func (m *SendEmailRequest) XXX_Size() int {
	return xxx_messageInfo_SendEmailRequest.Size(m)
}
func (m *SendEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailRequest proto.InternalMessageInfo

type SendEmailReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailReply) Reset()         { *m = SendEmailReply{} }
func (m *SendEmailReply) String() string { return proto.CompactTextString(m) }
func (*SendEmailReply) ProtoMessage()    {}
func (*SendEmailReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b94f4797c7a2698, []int{1}
}

func (m *SendEmailReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailReply.Unmarshal(m, b)
}
func (m *SendEmailReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailReply.Marshal(b, m, deterministic)
}
func (m *SendEmailReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailReply.Merge(m, src)
}
func (m *SendEmailReply) XXX_Size() int {
	return xxx_messageInfo_SendEmailReply.Size(m)
}
func (m *SendEmailReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SendEmailRequest)(nil), "pb.SendEmailRequest")
	proto.RegisterType((*SendEmailReply)(nil), "pb.SendEmailReply")
}

func init() {
	proto.RegisterFile("notifications/pkg/grpc/pb/notifications.proto", fileDescriptor_1b94f4797c7a2698)
}

var fileDescriptor_1b94f4797c7a2698 = []byte{
	// 127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0xcd, 0xcb, 0x2f, 0xc9,
	0x4c, 0xcb, 0x4c, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0xd6, 0x2f, 0xc8, 0x4e, 0xd7, 0x4f, 0x2f,
	0x2a, 0x48, 0xd6, 0x2f, 0x48, 0xd2, 0x47, 0x91, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x2a, 0x48, 0x52, 0x12, 0xe2, 0x12, 0x08, 0x4e, 0xcd, 0x4b, 0x71, 0xcd, 0x4d, 0xcc, 0xcc, 0x09,
	0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x12, 0xe0, 0xe2, 0x43, 0x12, 0x2b, 0xc8, 0xa9, 0x34,
	0x72, 0xe3, 0xe2, 0xf5, 0x43, 0x36, 0x40, 0xc8, 0x94, 0x8b, 0x13, 0xae, 0x44, 0x48, 0x44, 0xaf,
	0x20, 0x49, 0x0f, 0xdd, 0x14, 0x29, 0x21, 0x34, 0xd1, 0x82, 0x9c, 0xca, 0x24, 0x36, 0xb0, 0xc5,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x54, 0xa4, 0x83, 0xb1, 0xa9, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotificationsClient is the client API for Notifications service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificationsClient interface {
	SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailReply, error)
}

type notificationsClient struct {
	cc *grpc.ClientConn
}

func NewNotificationsClient(cc *grpc.ClientConn) NotificationsClient {
	return &notificationsClient{cc}
}

func (c *notificationsClient) SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailReply, error) {
	out := new(SendEmailReply)
	err := c.cc.Invoke(ctx, "/pb.Notifications/SendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotificationsServer is the server API for Notifications service.
type NotificationsServer interface {
	SendEmail(context.Context, *SendEmailRequest) (*SendEmailReply, error)
}

// UnimplementedNotificationsServer can be embedded to have forward compatible implementations.
type UnimplementedNotificationsServer struct {
}

func (*UnimplementedNotificationsServer) SendEmail(ctx context.Context, req *SendEmailRequest) (*SendEmailReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendEmail not implemented")
}

func RegisterNotificationsServer(s *grpc.Server, srv NotificationsServer) {
	s.RegisterService(&_Notifications_serviceDesc, srv)
}

func _Notifications_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationsServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Notifications/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationsServer).SendEmail(ctx, req.(*SendEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Notifications_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Notifications",
	HandlerType: (*NotificationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendEmail",
			Handler:    _Notifications_SendEmail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notifications/pkg/grpc/pb/notifications.proto",
}
